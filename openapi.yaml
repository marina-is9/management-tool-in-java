openapi: 3.0.0
info:
  title: Project Management API
  description: This API manages projects, tasks, and related entities like employees and authentication.
  version: 1.0.0
  contact:
    name: Your Company Name
    email: contact@yourcompany.com
    url: https://www.yourcompany.com
servers:
  - url: https://api.yourcompany.com/v1
    description: Main API server

paths:
  /projects/{projectId}/tasks:
    get:
      summary: Get all tasks for a project
      operationId: getTasks
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A list of tasks for the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Project not found

    post:
      summary: Create a new task for the project
      operationId: createTask
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input data

  /projects/{projectId}/tasks/{taskId}:
    get:
      summary: Get a specific task
      operationId: getTaskById
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
        - name: taskId
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

    put:
      summary: Update a specific task
      operationId: updateTask
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
        - name: taskId
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '400':
          description: Invalid input data

    delete:
      summary: Delete a specific task
      operationId: deleteTask
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
        - name: taskId
          in: path
          required: true
          description: The task ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found

  /projects/{projectId}/backlog:
    get:
      summary: Get the project backlog
      operationId: getBacklog
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of tasks in the backlog
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /projects/{projectId}/sprints/{sprintId}/tasks:
    get:
      summary: Get tasks for a specific sprint in a project
      operationId: getSprintTasks
      parameters:
        - name: projectId
          in: path
          required: true
          description: The project ID
          schema:
            type: integer
            format: int64
        - name: sprintId
          in: path
          required: true
          description: The sprint ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A list of tasks in the sprint
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        status:
          type: string
        assignedTo:
          type: string
        dueDate:
          type: string
          format: date-time
    TaskDTO:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
        assignedTo:
          type: string
        dueDate:
          type: string
          format: date-time
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        tenantId:
          type: string
        startDate:
          type: string
          format: date-time
        completionDate:
          type: string
          format: date-time
