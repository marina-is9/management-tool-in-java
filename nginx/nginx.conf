user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    server_tokens off;
    chunked_transfer_encoding off;

    gzip on;
    gzip_types application/json;
    gzip_min_length 1000;

    # Include the default Nginx server configuration
    include /etc/nginx/conf.d/default.conf;

    server {
        listen 80;
        server_name localhost;

        # Reverse Proxy Configuration for Spring Boot
        location / {
            proxy_pass http://spring-boot:8080;  # Assumes 'spring-boot' is the service name in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            proxy_cache_bypass $http_upgrade;
        }

        # Fallback route for Swagger UI
        location /swagger/ {
            proxy_pass http://swagger-ui:8080;  # Assumes 'swagger-ui' is the service name in Docker Compose
        }

        # Error handling (optional)
        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
